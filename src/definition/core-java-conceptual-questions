Please answer the below core-java Questions:

What is programing language?
Ans: A programming language is a formal language that contains a set of instructions that produce various kinds of output in a computer;
What jdk contains or composed of and define each components?
Ans: JDK contains:

    The Runtime Interpreter: The Java runtime interpreter (java) is a stand-alone version of the Java interpreter built into the HotJava browser. The runtime interpreter provides the support to run Java executable programs in compiled, bytecode format.
    The Compiler: The Java compiler (javac) is used to compile Java source code files into executable Java bytecode classes.
    The Applet Viewer:The applet viewer is a tool that serves as a minimal test bed for final release Java applets.
    The Debugger: It finds out the bugs of the code:
    The Class File Disassembler: The javap command disassembles one or more class files. Its output depends on the options used. If no options are used, javap prints out the package, protected, and public fields and methods of the classes passed to it. javap prints its output to stdout.
What is IDE?
Ans: An integrated development environment (IDE) is a software application that provides comprehensive facilities to computer programmers for software development
What are the IDEs available in the market to support java?
Ans :net beans, intellij, drjava,eclipse.
Explain the entire java life cycle.
Ans:There are three main stages in the life cycle of a java program. They are:
        Editing the program
        Compiling the source code
        Executing the byte code

    First, you will start with typing the program in a text-editor (ex: notepad, notepad++, wordpad, textedit etc). After completing editing of the program, we have to save the file. While saving the file you should remember that the file must be saved with .java extension. For example, let’s think that I had written a Java program which contains a single class Sample (more on classes in future posts). It is a good convention to save the file with the name of the class. So, as per my example, the file will be saved as Sample.java.

    Second step is compilation. The name of the Java compiler is javac. The input to the compiler is Java source code which is available in Sample.java. The output of the compiler is machine independent or platform independent code which is known as bytecode. The file which is generated after compilation is .class file. As per my example, the bytecode file will be Sample.class.

    Last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM). Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine.
what is class?
Ans: A Class is like an object constructor, or a "blueprint" for creating objects.
What is object?
Ans: An object is an instance of a class. A class is a template or blueprint from which objects are created.
What is the entry point of an application?
Ans: An application entry point identifies a resource that is an access point to an application. Application entry points are used to control users' access to different versions of an application that is deployed on a platform. A Java application is a public Java class with a main() method. The main() method is the entry point into the application.
Why main is static?
Ans:Java main() method is always static, so that compiler can call it without the creation of an object or before the creation of an object of the class.
Which class is the superclass of all classes?
Ans: java.lang.Object
What is difference between path and classpath variables?
Ans:path is a mediator between developer and operating system to inform binary file path where as Classpath is a mediator between developer and compiler to inform the library file path those are used in our source code.
What is the difference between an Interface and Abstract class?
Ans:An abstract class allows you to create functionality that subclasses can implement or override. An interface only allows you to define functionality, not implement it. And whereas a class can extend only one abstract class, it can take advantage of multiple interfaces.
Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
Ans: no. we need to inherit the abstact class in another class.
what is Access Specifier?
Ans: Access specifiers define how the members (attributes and methods) of a class can be accessed.
What is OOP ? Define each feature of java OOP.
Ans:Object-oriented programming (OOP) is a computer programming model that organizes software design around data, or objects, rather than functions and logic. An object can be defined as a data field that has unique attributes and behavior.
features of java oop:
Encapsulation.
Inheritance.
Polymorphism.
What is Java Package and which package is imported by default?
Ans:A java package is a group of similar types of classes, interfaces and sub-packages.
java.lang
What is API? Name list of API that you have used so far.
Ans: API is the acronym for Application Programming Interface, which is a software intermediary that allows two applications to talk to each other.
Does java support multiple inheritance, explain why or why not?
Ans: no. you can extend only one class at a time.
What is method overloading and when it happens?
Ans: overloading in methods of same name having different parameter.
Explain exceptions in java and how to handle it.
Ans:An exception (or exceptional event) is a problem that arises during the execution of a program.
using try catch key word one can handle java excception.
What is static keyword in java? How it has been used in variables and methods ?
Ans: static keyword is used for memory management.a variable and method can bes directly if its under static key word.
What is final and how it has been used variables and methods?
Ans: final key word is used when the method or the variable can not be modified afterward.
What is final, finally and finalize?
Ans:Final is used to apply restrictions on class, method and variable. Final class can't be inherited, final method can't be overridden and final variable value can't be changed.
Finally is used to place important code, it will be executed whether exception is handled or not.
Finalize is used to perform clean up processing just before object is garbage collected.
What is a constructor ?
Ans:A constructor in Java is a special method that is used to initialize objects. The constructor is called when an object of a class is created.
Can we have multiple constructors in a class?
Ans: yes .but with different parameter.
If we don't have a constructor declared, what is called during the object creation?
Ans: If a class does not explicitly declare any, the Java compiler automatically provides a no-argument constructor, called the default constructor
What is "this" keyword in java ?
Ans: this keyword refers to the current object in a method or constructor
What is "super" keyword in java? How many possible way can you use?
Ans:The super keyword in Java is a reference variable which is used to refer immediate parent class object.

1. super can be used to refer immediate parent class instance variable.
2. super can be used to invoke immediate parent class method.
3. super() can be used to invoke immediate parent class constructor.

What is JVM stand for ?
Ans:Java Virtual Machine.
Is JVM platform independent?
Ans:yes.
What version of java are you using?
Ans:15.0.2
What is JAR stand for ?
Ans: java archive.
What is the difference between JDK and JVM?
Ans: JDK is a software development kit and JVM is an environment for executing bytecode.
What is the difference between JVM and JRE?
ANS: JVM is an environment for executing bytecode and JRE is a software bundle that allows Java program to run
What is compile time and run time?
Ans:Compile-time is the time at which the source code is converted into an executable code while the run time is the time at which the executable code is started running.
What is heap?
Ans:A heap is a tree-based data structure and can be classified as a complete binary tree.
How java manage it's memory?
Ans: In Java, memory management is the process of allocation and de-allocation of objects, called Memory management. Java does memory management automatically. Java uses an automatic memory management system called a garbage collector. Thus, we are not required to implement memory management logic in our application.
What is the difference between String, StringBuffer and StringBuilder?
Ans: String is datatype. StringBuffer is synchronized .It means two threads can't call the methods of StringBuffer simultaneously.	StringBuilder is non-synchronized . It means two threads can call the methods of StringBuilder simultaneously.
What is Singleton class?
Ans: a singleton class is a class that can have only one object  at a time.
What is Serialization and Deserialization?
Ans:Serialization is a mechanism of converting the state of an object into a byte stream. Deserialization is the reverse process where the byte stream is used to recreate the actual Java object in memory.
when to use transient variable in java?
Ans:Transien variable in Java is  a variable should not be part of the serialization process.
Difference between while and do..while loop?
Ans: the main difference between a while loop and do while loop is that while loop check condition before iteration of the loop. On the other hand, the do-while loop verifies the condition after the execution of the statements inside the loop.
What is Enum?
Ans: An enum is a special class that represents a group of constants
What is Iterator?
Ans:An Iterator is an object that can be used to loop through collections, like ArrayList and HashSet.
Which one will take more memory, an int or Integer?
Ans: INTEGER.
Why is String Immutable in Java?
Ans:The string is Immutable in Java because String objects are cached in the String pool.
What is constructor chaining in Java?
Ans:Constructor chaining is the process of calling one constructor from another constructor with respect to current object.
The difference between Serial and Parallel Garbage Collector?
Ans:  a serial collector is a default copying collector which uses only one GC thread for the GC operation, while a parallel collector uses multiple GC threads for the GC operation.
What is JIT stands for?
Ans:Java-In-Time Compiler.
Explain Java Heap space and Garbage collection?
Ans:Heap space in Java is used for dynamic memory allocation for Java objects and JRE classes at the runtime.Java garbage collection is the process by which Java programs perform automatic memory management.
Can you guarantee the garbage collection process?
Ans: no
What is the difference between stack and heap in Java?
Ans: Heap memory is used by all the parts of the application whereas stack memory is used only by one thread of execution. Whenever an object is created, it's always stored in the Heap space and stack memory contains the reference to it.
What is reflection in java and why is it useful?
Ans: Reflection is an API which is used to examine or modify the behavior of methods, classes, interfaces at runtime. it allows us to leverage APIs within Android and also Java.
what is multithreading in java?
Ans:Multithreading in Java is a process of executing multiple threads simultaneously.A thread is a lightweight sub-process, the smallest unit of processing. Multiprocessing and multithreading, both are used to achieve multitasking.
What is the use of synchronization in Java?
Ans:Synchronization in java is the capability to control the access of multiple threads to any shared resource. Java Synchronization is better option where we want to allow only one thread to access the shared resource.
What is Framework?
Ans:Java frameworks are bodies of prewritten code used by developers to create apps using the Java programming language.
What are the testing Framework available in java?
Ans: JUnit.
     Serenity.
     TestNG.
     Selenide.
     Gauge.
Difference between jUnit and testNG?
Ans: junit can not do dependency test tentNG can.
What are the dependencies for this project?
what is dependency injection in java?
Ans:Dependency injection (DI) is the concept in which objects get other required objects from outside. A Java class has a dependency on another class, if it uses an instance of this class.
What is static binding and dynamic binding?
Ans:Static binding uses Type information for binding while Dynamic binding uses Objects to resolve binding.








